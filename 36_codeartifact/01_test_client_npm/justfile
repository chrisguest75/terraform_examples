#!/usr/bin/env just --justfile
# ^ A shebang isn't required, but allows a justfile to be executed
#   like a script, with `./justfile test`, for example.

set dotenv-load := true

# default lists actions
default:
  @just -f justfile --list

# check if AWS_PROFILE and AWS_REGION are set
checks:
  [ ! -z "${AWS_PROFILE-}" ] || (echo "AWS_PROFILE is not set"; exit 1)
  [ ! -z "${AWS_REGION-}" ] || (echo "AWS_REGION is not set"; exit 1)

local-test-pipeline:
  #!/usr/bin/env bash
  set -eufo pipefail

  echo "*************************************"
  echo "** Local pipeline"
  echo "*************************************"
  node --version
  #npm outdated
  #npm install
  #npm run lint
  #npm run test
  npm run start
  npm run docker:build
  npm run docker:run
  npm run docker:build:chainguard
  npm run docker:run:chainguard

test-all: local-test-pipeline

create_npmrc: checks
  #!/usr/bin/env bash
  set -eufo pipefail
  export NPM_CONFIG_USERCONFIG=$(pwd)/.publish_npmrc
  echo "registry=https://${CODEARTIFACT_DOMAIN}-${CODEARTIFACT_DOMAIN_OWNER}.d.codeartifact.${AWS_REGION}.amazonaws.com/npm/${CODEARTIFACT_REPOSITORY}/" > ${NPM_CONFIG_USERCONFIG}
  echo "//${CODEARTIFACT_DOMAIN}-${CODEARTIFACT_DOMAIN_OWNER}.d.codeartifact.${AWS_REGION}.amazonaws.com/npm/${CODEARTIFACT_REPOSITORY}/:always-auth=true" >> ${NPM_CONFIG_USERCONFIG}
  echo "//${CODEARTIFACT_DOMAIN}-${CODEARTIFACT_DOMAIN_OWNER}.d.codeartifact.${AWS_REGION}.amazonaws.com/npm/${CODEARTIFACT_REPOSITORY}/:_authToken=\${CODEARTIFACT_AUTHTOKEN}" >> ${NPM_CONFIG_USERCONFIG}
  cat ${NPM_CONFIG_USERCONFIG}


install package="": create_npmrc
  #!/usr/bin/env bash
  set -eufo pipefail

  export CODEARTIFACT_AUTHTOKEN=$(aws --profile $AWS_PROFILE --region $AWS_REGION codeartifact get-authorization-token --domain $CODEARTIFACT_DOMAIN --domain-owner $CODEARTIFACT_DOMAIN_OWNER --query authorizationToken --output text)
  export NPM_CONFIG_USERCONFIG=$(pwd)/.publish_npmrc
  cat ${NPM_CONFIG_USERCONFIG}
  
  #nvm use
  npm install "{{ package }}"