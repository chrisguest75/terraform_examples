name: CI

on:
  push:
    branches: 
      - '*'
      # - '!master'   # excludes main
    paths:
      - '**'
      - '.github/workflows/ci.yaml'

  pull_request:
    branches:  
      - '*'
      # - '!master'   # excludes main
    paths:
      - '**'
      - '.github/workflows/ci.yaml'



jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate terraform configuration
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform validate
        uses: dflook/terraform-validate@v1
        with:
          path: "01_s3_bucket"

  fmt-check:
    runs-on: ubuntu-latest
    name: Check formatting of terraform files
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform fmt
        uses: dflook/terraform-fmt-check@v1
        with:
          path: "01_s3_bucket"




# jobs:
#   github-info:
#     runs-on: ubuntu-latest
#     name: Github execution information
#     steps:
#       # - name: Dump GitHub context
#       #   id: github_context_step
#       #   run: echo '${{ toJSON(github) }}'
#       - name: Dump job context
#         run: echo '${{ toJSON(job) }}'
#       - name: Dump steps context
#         run: echo '${{ toJSON(steps) }}'
#       - name: Dump runner context
#         run: echo '${{ toJSON(runner) }}'
#       - name: Dump strategy context
#         run: echo '${{ toJSON(strategy) }}'
#       - name: Dump matrix context
#         run: echo '${{ toJSON(matrix) }}'
#       - name: Dump docker info
#         run: docker info
#       - name: Terraform Version
#         run: terraform version


#   validate:
#     runs-on: ubuntu-latest
#     name: Validate terraform configuration
#     steps:
#       - matrix:
#           projects: [
#             "01_s3_bucket",
#             "02_asg"
#           ]    

#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: terraform validate
#         uses: dflook/terraform-validate@v1
#         with:
#           path: ${{ matrix.projects }}

#   fmt-check:
#     runs-on: ubuntu-latest
#     name: Check formatting of terraform files
#     steps:
#       - matrix:
#           projects: [
#             "01_s3_bucket",
#             "02_asg"
#           ]    

#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: terraform fmt
#         uses: dflook/terraform-fmt-check@v1
#         with:
#           path: ${{ matrix.projects }}



# jobs:
#   github-info:
#     name: "Github information"
#     runs-on: ubuntu-latest
#     env:
#       GIT_COMMIT_MSG: '${{ github.event.head_commit.message }}'


#     steps:
#     - matrix:
#         projects: [
#           "01_s3_bucket",
#           "02_asg"
#         ]    

#     # - name: Dump GitHub context
#     #   id: github_context_step
#     #   run: echo '${{ toJSON(github) }}'
#     - name: Dump job context
#       run: echo '${{ toJSON(job) }}'
#     - name: Dump steps context
#       run: echo '${{ toJSON(steps) }}'
#     - name: Dump runner context
#       run: echo '${{ toJSON(runner) }}'
#     - name: Dump strategy context
#       run: echo '${{ toJSON(strategy) }}'
#     - name: Dump matrix context
#       run: echo '${{ toJSON(matrix) }}'
#     - name: Dump docker info
#       run: docker info
#     - name: Terraform Version
#       run: terraform version

#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         fetch-depth: 0
#         # persist-credentials: false
#         # clean: false
#         # submodules: false

#     - name: semgrep-action
#       uses: returntocorp/semgrep-action@v1
#       with:
#         config: >- # more at semgrep.dev/explore
#           r/generic.dockerfile
#           r/bash
#           p/terraform
#           p/typescript
#           p/github-actions
#           r/html.best-practice.robots-denied.robots-denied
#           r/html.security.missing-noopener.missing-noopener
#           r/html.security.missing-noreferrer.missing-noreferrer


  # semgrep-validate:
  #   name: "Validate with semgrep"
  #   runs-on: ubuntu-latest
  #   env:
  #     GIT_COMMIT_MSG: '${{ github.event.head_commit.message }}'

  #   steps:

  # test:
  #   name: "Validate Terraform"
  #   runs-on: ubuntu-latest
  #   env:
  #     GIT_COMMIT_MSG: '${{ github.event.head_commit.message }}'

  #   steps:
  #   - matrix:
  #       projects: [
  #         "01_s3_bucket",
  #         "02_asg"
  #       ]

  #   - name: Save starttime
  #     run: |
  #       echo $(date +%s) > ../build-start
  #       echo "${{ github.sha }}-$GITHUB_RUN_ID" > ../build-tag
  #       echo "Commit msg: '$GIT_COMMIT_MSG'"

  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0
  #       # persist-credentials: false
  #       # clean: false
  #       # submodules: false

  #   - name: Terraform Check
  #     run: |
  #       cd ${{ matrix.projects }}
  #       terraform init
  #       terraform fmt -check
  #       terraform plan




#         "00_basic_practices"
#         /       09_targeting_resources/   19_sops/
# /             10_workspaces/            20_cdk/
# 02_asg/                   11_importing_state/       21_importing_ssm/
# 03_locks_versions/        12_upgrading_providers/   22_drift_detection/
# 04_envvars/               12_upgrading_terraform/   23_honeycomb/
# 05_debugging/             13_importing_data/        24_quine/
# 06_processing_plan_files/ 15_importing_webservice/  25_moved/
# 07_remote_state/          17_static_site/           26_github_modules/
# 08_module/                18_terraformer/           28_aiven_kafka/

