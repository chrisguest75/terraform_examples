name: CI

on:
  push:
    branches: 
      - '*'
      # - '!master'   # excludes main
    paths:
      - '**'
      - '.github/workflows/ci.yaml'

  pull_request:
    branches:  
      - '*'
      # - '!master'   # excludes main
    paths:
      - '**'
      - '.github/workflows/ci.yaml'



jobs:
  github-info:
    runs-on: ubuntu-latest
    name: Github execution information
    steps:
      # - name: Dump GitHub context
      #   id: github_context_step
      #   run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: Dump docker info
        run: docker info
      - name: Terraform Version
        run: terraform version  

  validate:
    runs-on: ubuntu-latest
    name: Validate terraform configuration
    strategy:
      fail-fast: false
      matrix:
        projects: [
          { plan: true, project: "01_s3_bucket", tfvars: "01_s3_bucket/terraform.tfvars" },
          { plan: true, project: "02_asg", tfvars: "02_asg/terraform.tfvars" },
          { plan: true, project: "03_locks_versions", tfvars: "" },
          { plan: true, project: "04_envvars", tfvars: "" },
          { plan: true, project: "05_debugging", tfvars: "" },
          { plan: true, project: "06_processing_plan_files", tfvars: "06_processing_plan_files/terraform.tfvars" },
          { plan: true, project: "07_remote_state/create_template_file", tfvars: "" },
          { plan: false, project: "07_remote_state/render_template_file", tfvars: "" },
          { plan: true, project: "08_module", tfvars: "" },
          { plan: true, project: "09_targeting_resources", tfvars: "" },
          { plan: true, project: "10_workspaces", tfvars: "" },
          { plan: true, project: "11_importing_state", tfvars: "" },
          { plan: true, project: "12_upgrading_providers", tfvars: "" },
          { plan: true, project: "12_upgrading_terraform", tfvars: "" }, 
          { plan: true, project: "13_importing_data", tfvars: "" },      
          { plan: true, project: "15_importing_webservice", tfvars: "" },
          { plan: true, project: "18_terraformer", tfvars: "" },    
          { plan: true, project: "19_sops", tfvars: "" },
          { plan: true, project: "20_cdk", tfvars: "" },
          { plan: true, project: "21_importing_ssm", tfvars: "" },
          { plan: true, project: "22_drift_detection", tfvars: "" },
          { plan: true, project: "23_honeycomb", tfvars: "" },
          { plan: true, project: "24_quine", tfvars: "24_quine/terraform.tfvars" },
          { plan: true, project: "25_moved", tfvars: "25_moved/terraform.tfvars" },
          { plan: true, project: "26_github_modules", tfvars: "" },
          { plan: true, project: "28_aiven_kafka", tfvars: "28_aiven_kafka/terraform.tfvars" },
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform validate ${{ matrix.projects.project }}
        uses: dflook/terraform-validate@v1
        with:
          path: ${{ matrix.projects.project }}

      - name: terraform fmt ${{ matrix.projects.project }}
        uses: dflook/terraform-fmt-check@v1
        with:
          path: ${{ matrix.projects.project }}

      - name: terraform plan ${{ matrix.projects.project }}
        if: ${{ matrix.projects.plan == true }}
        uses: dflook/terraform-plan@v1
        with:
          path: ${{ matrix.projects.project }}
          var_file: ${{ matrix.projects.tfvars }}

  semgrep:
    runs-on: ubuntu-latest
    name: Semgrep
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: semgrep-action
        uses: returntocorp/semgrep-action@v1
        with:
          config: >- # more at semgrep.dev/explore
            r/generic.dockerfile
            r/bash
            p/terraform
            p/typescript
            p/github-actions
            r/html.best-practice.robots-denied.robots-denied
            r/html.security.missing-noopener.missing-noopener
            r/html.security.missing-noreferrer.missing-noreferrer
          



